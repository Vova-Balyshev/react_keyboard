{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","state","pressedKey","handleKeyPress","event","code","setState","key","document","addEventListener","this","className","Component","ReactDOM","render","getElementById"],"mappings":"2MAMaA,EAAb,4MACEC,MAAQ,CACNC,WAAY,2BAFhB,EAaEC,eAAiB,SAACC,GAChB,MAAsB,UAAfA,EAAMC,KACT,EAAKC,SAAS,CAAEJ,WAAY,oCAC5B,EAAKI,SAAS,CAAEJ,WAAW,4BAAD,OAA8BE,EAAMG,IAApC,QAhBlC,uDAKE,WACEC,SAASC,iBAAiB,QAASC,KAAKP,kBAN5C,kCASE,WACEK,SAASC,iBAAiB,QAASC,KAAKP,kBAV5C,oBAmBE,WACE,IAAQD,EAAeQ,KAAKT,MAApBC,WAER,OACE,qBAAKS,UAAU,MAAf,SACE,mBAAGA,UAAU,eAAb,SACGT,UAzBX,GAAyBU,a,MCDzBC,IAASC,OACP,cAAC,EAAD,IACAN,SAASO,eAAe,W","file":"static/js/main.d477f9db.chunk.js","sourcesContent":["import { Component } from 'react';\n\ntype State = {\n  pressedKey: string;\n};\n\nexport class App extends Component<{}, State> {\n  state = {\n    pressedKey: 'Nothing was pressed yet',\n  };\n\n  componentDidMount() {\n    document.addEventListener('keyup', this.handleKeyPress);\n  }\n\n  componentWillUnmount() {\n    document.addEventListener('keyup', this.handleKeyPress);\n  }\n\n  handleKeyPress = (event: KeyboardEvent) => {\n    return event.code === 'Space'\n      ? this.setState({ pressedKey: 'The last pressed key is [Space]' })\n      : this.setState({ pressedKey: `The last pressed key is [${event.key}]` });\n  };\n\n  render() {\n    const { pressedKey } = this.state;\n\n    return (\n      <div className=\"App\">\n        <p className=\"App__message\">\n          {pressedKey}\n        </p>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}